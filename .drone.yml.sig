eyJhbGciOiJIUzI1NiJ9.IyBBZnRlciBhbnkgY2hhbmdlIHRvIHRoaXMgZmlsZSB5b3UgTVVTVCByZS1zaWduIGFuZCBjaGVja2luIHRoZSAuZHJvbmUueW1sLnNpZwojIFdoZW4geW91IGFyZSByZWFkeSB0byBzdWJtaXQgYSBwdWxsIHJlcXVlc3QsIHlvdSBtdXN0IHJlZ2VuZXJhdGUgLmRyb25lLnltbC5zaWcgZm9yIHRoZSB2bXdhcmUvdmljIHJlcG86CiMgJCBkcm9uZSBzaWduIC1zIGh0dHBzOi8vY2kudmNuYS5pbyAtdCAke0RST05FX1RPS0VOfSB2bXdhcmUvdmljCiMgVGhlIHNlY3JldHMgZmlsZSBpcyBpbiBvdXIgbG9jYWwgZ2l0IHJlcG8uICBBc2sgbWhhZ2VuIGZvciBhY2Nlc3MuCgotLS0Kd29ya3NwYWNlOgogIGJhc2U6IC9nbwogIHBhdGg6IHNyYy9naXRodWIuY29tL3Ztd2FyZS92aWMKCnBpcGVsaW5lOgogIGNsb25lOgogICAgaW1hZ2U6IHBsdWdpbnMvZ2l0CiAgICB0YWdzOiB0cnVlCiAgICAjIGRvbnQgY2xvbmUgc3VibW9kdWxlcwogICAgcmVjdXJzaXZlOiBmYWxzZQoKICB3YWl0LWZvci1idWlsZDoKICAgIGltYWdlOiAke1RFU1RfQlVJTERfSU1BR0U9Z2NyLmlvL2VtaW5lbnQtbmF0aW9uLTg3MzE3L3ZpYy1pbnRlZ3JhdGlvbi10ZXN0OjEuMzB9CiAgICBwdWxsOiB0cnVlCiAgICBlbnZpcm9ubWVudDoKICAgICAgQklOOiBiaW4KICAgICAgR09QQVRIOiAvZ28KICAgICAgU0hFTEw6IC9iaW4vYmFzaAogICAgICBURVNUX1VSTF9BUlJBWTogJHtURVNUX1VSTF9BUlJBWX0KICAgICAgRFJPTkVfU0VSVkVSOiAke0RST05FX1NFUlZFUn0KICAgICAgRFJPTkVfVE9LRU46ICR7RFJPTkVfVE9LRU59CiAgICBjb21tYW5kczoKICAgICAgLSB0ZXN0cy93YWl0X3VudGlsX3ByZXZpb3VzX2J1aWxkc19jb21wbGV0ZS5zaAoKICB2aWMtZW5naW5lOgogICAgaW1hZ2U6ICR7VEVTVF9CVUlMRF9JTUFHRT1nY3IuaW8vZW1pbmVudC1uYXRpb24tODczMTcvdmljLWludGVncmF0aW9uLXRlc3Q6MS4zMH0KICAgIHB1bGw6IHRydWUKICAgIGVudmlyb25tZW50OgogICAgICBCSU46IGJpbgogICAgICBHT1BBVEg6IC9nbwogICAgICBTSEVMTDogL2Jpbi9iYXNoCiAgICAgIFRFU1RfVVJMX0FSUkFZOiAgJHtURVNUX1VSTF9BUlJBWX0KICAgICAgVEVTVF9VU0VSTkFNRTogICR7VEVTVF9VU0VSTkFNRX0KICAgICAgVEVTVF9QQVNTV09SRDogICR7VEVTVF9QQVNTV09SRH0KICAgICAgQlVJTERfTlVNQkVSOiAke0RST05FX0JVSUxEX05VTUJFUn0KICAgICAgQ09NTUlUOiAke0RST05FX0NPTU1JVH0KICAgIGNvbW1hbmRzOgogICAgICAtIG1ha2UgbWFyawogICAgICAtIG1ha2UgLWozIGFsbAogICAgICAtIG1ha2Ugc2luY2VtYXJrCiAgICAgIC0gbWFrZSBtYXJrCiAgICAgIC0gZWNobyBgbHMgdmVuZG9yL2dpdGh1Yi5jb20vdm13YXJlL2dvdm1vbWkvdmltMjUvbWV0aG9kc2AKICAgICAgLSBlY2hvIGBscyB2ZW5kb3IvZ2l0aHViLmNvbS92bXdhcmUvZ292bW9taS92aW0yNS90eXBlc2AKICAgICAgLSBlY2hvIGBscyB2ZW5kb3IvZ2l0aHViLmNvbS9kb2NrZXIvZG9ja2VyL3ZlbmRvci9naXRodWIuY29tL29wZW5jb250YWluZXJzL3J1bmMvbGliY29udGFpbmVyL3N5c3RlbWAKICAgICAgLSBleHBvcnQgVklDX0VTWF9VUkxfQVJSQVk9ImB0ZXN0cy9nZXRfdGVzdF91cmwuc2hgIgogICAgICAtIG1ha2UgLWozIHRlc3QKICAgICAgLSBtYWtlIHNpbmNlbWFyawogICAgd2hlbjoKICAgICAgc3RhdHVzOiAgc3VjY2VzcwoKICB2aWMtaW50ZWdyYXRpb24tdGVzdC1vbi1wcjoKICAgIGltYWdlOiAke1RFU1RfQlVJTERfSU1BR0U9Z2NyLmlvL2VtaW5lbnQtbmF0aW9uLTg3MzE3L3ZpYy1pbnRlZ3JhdGlvbi10ZXN0OjEuMzB9CiAgICBwdWxsOiB0cnVlCiAgICBwcml2aWxlZ2VkOiB0cnVlCiAgICBlbnZpcm9ubWVudDoKICAgICAgQklOOiBiaW4KICAgICAgR09QQVRIOiAvZ28KICAgICAgU0hFTEw6IC9iaW4vYmFzaAogICAgICBMT0dfVEVNUF9ESVI6IGluc3RhbGwtbG9ncwogICAgICBHSVRIVUJfQVVUT01BVElPTl9BUElfS0VZOiAgJHtHSVRIVUJfQVVUT01BVElPTl9BUElfS0VZfQogICAgICBEUk9ORV9TRVJWRVI6ICAke0RST05FX1NFUlZFUn0KICAgICAgRFJPTkVfVE9LRU46ICAke0RST05FX1RPS0VOfQogICAgICBURVNUX1VSTF9BUlJBWTogICR7VEVTVF9VUkxfQVJSQVl9CiAgICAgIFRFU1RfVVNFUk5BTUU6ICAke1RFU1RfVVNFUk5BTUV9CiAgICAgIFRFU1RfUEFTU1dPUkQ6ICAke1RFU1RfUEFTU1dPUkR9CiAgICAgIFRFU1RfREFUQVNUT1JFOiAke1RFU1RfREFUQVNUT1JFfQogICAgICBURVNUX1RJTUVPVVQ6ICR7VEVTVF9USU1FT1VUfQogICAgICBSRVBPUlRJTkdfU0VSVkVSX1VSTDogJHtSRVBPUlRJTkdfU0VSVkVSX1VSTH0KICAgICAgR09WQ19JTlNFQ1VSRTogdHJ1ZQogICAgICBHT1ZDX1VTRVJOQU1FOiAgJHtURVNUX1VTRVJOQU1FfQogICAgICBHT1ZDX1BBU1NXT1JEOiAgJHtURVNUX1BBU1NXT1JEfQogICAgICBHT1ZDX0RBVEFTVE9SRTogJHtURVNUX0RBVEFTVE9SRX0KICAgICAgR1NfUFJPSkVDVF9JRDogJHtHU19QUk9KRUNUX0lEfQogICAgICBHU19DTElFTlRfRU1BSUw6ICR7R1NfQ0xJRU5UX0VNQUlMfQogICAgICBHU19QUklWQVRFX0tFWTogJHtHU19QUklWQVRFX0tFWX0KICAgICAgRE9NQUlOOiAke0NJX0RPTUFJTn0KICAgIGNvbW1hbmRzOgogICAgICAtIG1ha2UgbWFyawogICAgICAtIHRlc3RzL2ludGVncmF0aW9uLXRlc3Quc2gKICAgICAgLSBtYWtlIHNpbmNlbWFyawogICAgd2hlbjoKICAgICAgc3RhdHVzOiAgc3VjY2VzcwoKICB2aWMtdWk6CiAgICBpbWFnZTogJHtURVNUX0JVSUxEX0lNQUdFPWdjci5pby9lbWluZW50LW5hdGlvbi04NzMxNy92aWMtaW50ZWdyYXRpb24tdGVzdDoxLjMwfQogICAgcHVsbDogdHJ1ZQogICAgZW52aXJvbm1lbnQ6CiAgICAgIEJJTjogYmluCiAgICBjb21tYW5kczoKICAgICAgLSBtYWtlIG1hcmsKICAgICAgLSBtYWtlIHZpYy11aS1wbHVnaW5zCiAgICAgIC0gbWFrZSBzaW5jZW1hcmsKICAgIHdoZW46CiAgICAgIHN0YXR1czogIHN1Y2Nlc3MKCiAgYnVuZGxlOgogICAgaW1hZ2U6IGdvbGFuZzoxLjgKICAgIHB1bGw6IHRydWUKICAgIGVudmlyb25tZW50OgogICAgICBCSU46IGJpbgogICAgICBCSU5fVEVNUF9ESVI6IGJpbi92aWMKICAgICAgR09QQVRIOiAvZ28KICAgICAgU0hFTEw6IC9iaW4vYmFzaAogICAgY29tbWFuZHM6CiAgICAgIC0gbWFrZSBtYXJrCiAgICAgIC0gcm0gLXJmICRCSU5fVEVNUF9ESVIKICAgICAgLSBta2RpciAtcCAkQklOX1RFTVBfRElSL3VpCiAgICAgIC0gY3AgLXJmIHVpL2luc3RhbGxlci8qICRCSU5fVEVNUF9ESVIvdWkKICAgICAgLSBjcCBMSUNFTlNFICRCSU5fVEVNUF9ESVIKICAgICAgLSBjcCBkb2MvYnVuZGxlL1JFQURNRSAkQklOX1RFTVBfRElSCiAgICAgIC0gY3AgJEJJTi92aWMtbWFjaGluZSogJEJJTl9URU1QX0RJUgogICAgICAtIGNwICRCSU4vdmljLXVpKiAkQklOX1RFTVBfRElSCiAgICAgIC0gY3AgJEJJTi9hcHBsaWFuY2UuaXNvICRCSU5fVEVNUF9ESVIKICAgICAgLSBjcCAkQklOL2Jvb3RzdHJhcC5pc28gJEJJTl9URU1QX0RJUgogICAgICAtIHRhciBjenZmICRCSU4vdmljXyQkQlVJTERfTlVNQkVSLnRhci5neiAtQyAkQklOIHZpYwogICAgICAtIHNoYXN1bSAtYSAyNTYgJEJJTi92aWNfJCRCVUlMRF9OVU1CRVIudGFyLmd6CiAgICAgIC0gc2hhc3VtIC1hIDEgJEJJTi92aWNfJCRCVUlMRF9OVU1CRVIudGFyLmd6CiAgICAgIC0gbWQ1c3VtICRCSU4vdmljXyQkQlVJTERfTlVNQkVSLnRhci5negogICAgICAtIGR1IC1rcyAkQklOL3ZpY18kJEJVSUxEX05VTUJFUi50YXIuZ3ogfCBhd2sgJ3twcmludCAkMSAvIDEwMjR9JyB8IHsgcmVhZCB4OyBlY2hvICR4IE1COyB9CiAgICAgIC0gbWtkaXIgYnVuZGxlCiAgICAgIC0gY3AgJEJJTi92aWNfJCRCVUlMRF9OVU1CRVIudGFyLmd6IGJ1bmRsZQogICAgICAtIG1ha2Ugc2luY2VtYXJrCiAgICB3aGVuOgogICAgICByZXBvOiB2bXdhcmUvdmljCiAgICAgIGV2ZW50OiBbIHB1c2gsIHRhZyBdCiAgICAgIGJyYW5jaDogWyBtYXN0ZXIsIHJlbGVhc2VzLyosIHJlZnMvdGFncy8qIF0KICAgICAgc3RhdHVzOiBzdWNjZXNzCgogIG5vdGlmeS1zbGFjazoKICAgIGltYWdlOiBwbHVnaW5zL3NsYWNrCiAgICB3ZWJob29rOiAke1NMQUNLX1VSTH0KICAgIHVzZXJuYW1lOiBkcm9uZQogICAgdGVtcGxhdGU6ID4KICAgICAgYnVpbGQgaHR0cHM6Ly9jaS52Y25hLmlvL3Ztd2FyZS92aWMve3sgYnVpbGQubnVtYmVyIH19IGZpbmlzaGVkIHdpdGggYSB7eyBidWlsZC5zdGF0dXMgfX0gc3RhdHVzLCBmaW5kIHRoZSBsb2dzIGhlcmU6IGh0dHBzOi8vY29uc29sZS5jbG91ZC5nb29nbGUuY29tL20vY2xvdWRzdG9yYWdlL2IvdmljLWNpLWxvZ3Mvby9pbnRlZ3JhdGlvbl9sb2dzX3t7IGJ1aWxkLm51bWJlciB9fV97eyBidWlsZC5jb21taXQgfX0uemlwP2F1dGh1c2VyPTEKICAgIHdoZW46CiAgICAgIHJlcG86IHZtd2FyZS92aWMKICAgICAgYnJhbmNoOiBbIG1hc3RlciwgcmVsZWFzZXMvKiwgcmVmcy90YWdzLyogXQogICAgICBzdGF0dXM6IGZhaWx1cmUKCiAgcHVibGlzaC1nY3MtYnVpbGRzOgogICAgaW1hZ2U6IG1hcGxhaW4vZHJvbmUtZ2NzOmxhdGVzdAogICAgcHVsbDogdHJ1ZQogICAgc291cmNlOiBidW5kbGUKICAgIHRhcmdldDogdmljLWVuZ2luZS1idWlsZHMKICAgIGFjbDoKICAgICAgLSBhbGxVc2VyczpSRUFERVIKICAgIGNhY2hlX2NvbnRyb2w6IHB1YmxpYyxtYXgtYWdlPTM2MDAKICAgIHdoZW46CiAgICAgIHJlcG86IHZtd2FyZS92aWMKICAgICAgZXZlbnQ6IFsgcHVzaCBdCiAgICAgIGJyYW5jaDogWyBtYXN0ZXIsIHJlbGVhc2VzLyogXQogICAgICBzdGF0dXM6IHN1Y2Nlc3MKCiAgcHVibGlzaC1nY3MtcmVsZWFzZXM6CiAgICBpbWFnZTogbWFwbGFpbi9kcm9uZS1nY3M6bGF0ZXN0CiAgICBwdWxsOiB0cnVlCiAgICBzb3VyY2U6IGJ1bmRsZQogICAgdGFyZ2V0OiB2aWMtZW5naW5lLXJlbGVhc2VzCiAgICBhY2w6CiAgICAgIC0gYWxsVXNlcnM6UkVBREVSCiAgICBjYWNoZV9jb250cm9sOiBwdWJsaWMsbWF4LWFnZT0zNjAwCiAgICB3aGVuOgogICAgICByZXBvOiB2bXdhcmUvdmljCiAgICAgIGV2ZW50OiBbIHB1c2gsIHRhZyBdCiAgICAgIGJyYW5jaDogWyByZWZzL3RhZ3MvKiBdCiAgICAgIHN0YXR1czogc3VjY2VzcwoKICByZXBvcnQtY292ZXJhZ2U6CiAgICBpbWFnZTogcGx1Z2lucy9jb3ZlcmFnZQogICAgc2VydmVyOiBodHRwczovL2NvdmVyYWdlLnZtd2FyZS5ydW4KICAgIHRva2VuOiAke0dJVEhVQl9BVVRPTUFUSU9OX0FQSV9LRVl9CiAgICBwYXR0ZXJuOiAuY292ZXIvY292ZXIub3V0CiAgICB3aGVuOgogICAgICBicmFuY2g6IFsgbWFzdGVyLCByZWxlYXNlcy8qLCByZWZzL3RhZ3MvKiBdCiAgICAgIHJlcG86IHZtd2FyZS92aWMKICAgICAgc3RhdHVzOiBzdWNjZXNzCg.Brnw-7-Z5uEx6HIKi6OYQQBOtaB1ZcViNF6rsZgo1FE